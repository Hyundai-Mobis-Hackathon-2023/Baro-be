plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'hyundai'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://github.com/TheoKanning/openai-java.git"
		// url "https://maven.pkg.github.com/openai/chatgpt-spring-boot-starter"
		credentials {
			username = "msung99"
			password = "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"
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'


	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.5'

	// Security, Authentication
	// implementation('org.springframework.boot:spring-boot-starter-security')

	//JwtService 를 만들어서 JWT를 통해 토큰을 생성, 토큰 검증 하는 클래스를 만들 것이다
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// openAI : chatGPT
	// implementation 'com.openai:openai-java-sdk:1.0.0'
	implementation 'io.github.flashvayne:chatgpt-spring-boot-starter:1.0.0'
	// implementation 'ai.openai:openai-api:0.3.0'
	// implementation 'com.openai:openai-java-sdk:1.0.0'
	//implementation 'com.openai:openai-java-sdk:2.3.0'
	//implementation fileTree(dir: 'libs', include: ['*.jar'])
}

tasks.named('test') {
	useJUnitPlatform()
}

// Properties properties = new Properties();
// properties.load(project.rootProject.file('local.properties').newDataInputStream())
